import { useState, useRef } from 'react';
import { Download, Send } from 'lucide-react';
import html2canvas from 'html2canvas';
import ProfileBalance from '../sections/ProfileBalance';
import ProfileStats from '../sections/ProfileStats';
import ProfileGameStats from '../sections/ProfileGameStats';

const ProfileShareGenerator = ({ user }) => {
	const [isLoading, setIsLoading] = useState(false);
	const [isGenerating, setIsGenerating] = useState(false);
	const shareRef = useRef(null);

	// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø—Ä–æ—Ñ—ñ–ª—é
	const generateProfileImage = async () => {
		setIsLoading(true);
		setIsGenerating(true);

		try {
			// –ü–æ–∫–∞–∑—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–∫—Ä—ñ–Ω—à–æ—Ç—É
			const element = shareRef.current;
			if (!element) return null;

			// –†–æ–±–∏–º–æ –µ–ª–µ–º–µ–Ω—Ç –≤–∏–¥–∏–º–∏–º –¥–ª—è —Å–∫—Ä—ñ–Ω—à–æ—Ç—É
			element.style.position = 'absolute';
			element.style.top = '-99999px';
			element.style.left = '-99999px';
			element.style.zIndex = '-9999';
			element.style.transform = 'scale(1)';

			await new Promise(resolve => setTimeout(resolve, 500)); // –î–∞—î–º–æ —á–∞—Å –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–∏—Ç–∏—Å—å

			const canvas = await html2canvas(element, {
				backgroundColor: '#022722',
				scale: 1.5, // –î–ª—è –∫—Ä–∞—â–æ—ó —è–∫–æ—Å—Ç—ñ
				width: 1024,
				height: 1868,
				useCORS: true,
				allowTaint: true,
				scrollX: 0,
				scrollY: 0,
			});

			// –•–æ–≤–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–∞–∑–∞–¥
			element.style.position = 'absolute';
			element.style.top = '-9999px';
			element.style.left = '-9999px';
			element.style.zIndex = '-1';

			return canvas;
		} catch (error) {
			console.error('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏–Ω–∫–∏:', error);
			return null;
		} finally {
			setIsLoading(false);
			setIsGenerating(false);
		}
	};

	// –°–∫–∞—á–∞—Ç–∏ —è–∫ PNG
	const downloadImage = async () => {
		const canvas = await generateProfileImage();
		if (!canvas) return;

		canvas.toBlob((blob) => {
			const url = URL.createObjectURL(blob);
			const link = document.createElement('a');
			link.download = `${user.minecraft_nick || user.minecraftNick}_profile.png`;
			link.href = url;
			link.click();
			URL.revokeObjectURL(url);
		}, 'image/png');
	};

	// –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –≤ Telegram
	const shareToTelegram = async () => {
		const canvas = await generateProfileImage();
		if (!canvas) return;

		canvas.toBlob(async (blob) => {
			try {
				if (navigator.share && navigator.canShare && navigator.canShare({ files: [new File([blob], 'profile.png', { type: 'image/png' })] })) {
					// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Web Share API —è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–æ
					const file = new File([blob], `${user.minecraft_nick}_profile.png`, { type: 'image/png' });
					await navigator.share({
						title: `–ü—Ä–æ—Ñ—ñ–ª—å ${user.minecraft_nick} - Forze Space`,
						text: `–ü–æ–¥–∏–≤—ñ—Ç—å—Å—è –Ω–∞ –º—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ Forze Space!`,
						files: [file]
					});
				} else {
					// –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Telegram Web
					const statsText = `üéÆ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å –Ω–∞ Forze Space!\n\nüí∞ GFC: ${user.game_balance?.toLocaleString() || 0}\nüíé DFC: ${user.donate_balance?.toLocaleString() || 0}${user.discount_percent ? `\nüè∑Ô∏è –ó–Ω–∏–∂–∫–∞: ${user.discount_percent}%` : ''}\n\n‚ö° –ü—Ä–∏—î–¥–Ω—É–π—Å—è: mine.forze.space`;

					window.open(`https://t.me/share/url?url=https://forze.space&text=${encodeURIComponent(statsText)}`);
				}
			} catch (error) {
				console.error('–ü–æ–º–∏–ª–∫–∞ —à–µ—Ä–∏–Ω–≥—É:', error);
				// –§–æ–ª–±–µ–∫ - –ø—Ä–æ—Å—Ç–æ —Å–∫–∞—á—É—î–º–æ —Ñ–∞–π–ª
				await downloadImage();
			}
		}, 'image/png');
	};

	return (
		<div className="profile-share-container">
			{/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è */}
			<div className="container">
				<div className="share-controls">
					<button
						className="share-btn download-btn"
						onClick={downloadImage}
						disabled={isLoading}
					>
						<Download size={18} />
						{isLoading ? '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è...' : '–°–∫–∞—á–∞—Ç–∏ PNG'}
					</button>

					<button
						className="share-btn telegram-btn"
						onClick={shareToTelegram}
						disabled={isLoading}
					>
						<Send size={18} />
						–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –≤ Telegram
					</button>
				</div>
			</div>

			{/* –ü—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–∞—Ä—Ç–∏–Ω–∫–∏ */}
			<div
				ref={shareRef}
				className={`profile-share-capture ${isGenerating ? 'generating' : ''}`}
			>
				<div className="share-wrapper">
					{/* –•–µ–¥–µ—Ä –ø—Ä–æ—Ñ—ñ–ª—é */}
					<div className="share-header-section">
						<div className="profile-header">
							<div className="profile-header__content">
								<div className="profile-avatar">
									<div className="avatar-ring">
										<img
											src={`https://mc-heads.net/avatar/${user.minecraftNick || user.minecraft_nick}/240`}
											alt="Avatar"
											className="avatar-image"
										/>
									</div>
									<div className="avatar-status online"></div>
								</div>

								<div className="profile-info">
									<div className="profile-info-content">
										<div className="profile-info-top">
											<h1 className="profile-name">{user.minecraftNick || user.minecraft_nick}</h1>
											<div className="profile-role">
												<span className="role-badge">{user.role || "–ì—Ä–∞–≤–µ—Ü—å"}</span>
											</div>
										</div>
										<div className="profile-meta">
											<div className="meta-item">
												<span className="meta-icon">üìÖ</span>
												<span>–ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π {new Date(user.registered_at * 1000).toLocaleDateString()}</span>
											</div>
											<div className="meta-item">
												<span className="meta-icon">üí¨</span>
												<span>–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Å—å–æ–≥–æ–¥–Ω—ñ: <strong>{user.messages_count}</strong></span>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					{/* –ë–ª–æ–∫ 1: –ë–∞–ª–∞–Ω—Å —Ç–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
					<div className="share-game-stats-row">
						<ProfileBalance user={user} />
					</div>
					<div className="share-game-stats-row">
						<ProfileGameStats user={user} />
					</div>

					{/* –ë–ª–æ–∫ 2: –Ü–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (—è–∫—â–æ —î) */}
					{user.plan_data_available && (
						<div className="share-game-stats-row">
							<ProfileStats user={user} />
						</div>
					)}

					{/* –ë–ª–æ–∫ 3: –§—É—Ç–µ—Ä –∑ –ª–æ–≥–æ—Ç–∏–ø–æ–º */}
					<div className="share-footer">
						<div className="footer-content">
							<div className="server-info">
								<span className="server-name">Forze World</span>
								<span className="server-ip">mine.forze.space</span>
							</div>
							<div className="footer-text">
								üèÜ –ù–∞–π–∫—Ä–∞—â–∏–π Minecraft —Å–µ—Ä–≤–µ—Ä!
							</div>
						</div>
					</div>
				</div>
			</div>

			<style jsx>{`
				.profile-share-container {
					margin: 20px 0;
				}

				.share-controls {
					display: flex;
					gap: 12px;
					justify-content: center;
					margin-bottom: 20px;
				}

				.share-btn {
					display: flex;
					align-items: center;
					gap: 8px;
					padding: 12px 24px;
					border: none;
					border-radius: 12px;
					font-weight: 600;
					cursor: pointer;
					transition: all 0.3s ease;
					font-size: 14px;
				}

				.download-btn {
					background: linear-gradient(135deg, #4aedd9, rgba(74, 237, 217, 0.8));
					color: #012722;
					margin-bottom: 10px;
				}

				.telegram-btn {
					background: linear-gradient(135deg, #0088cc, #005fa3);
					color: white;
					margin-bottom: 10px;
				}

				.share-btn:hover:not(:disabled) {
					transform: translateY(-2px);
					box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
				}

				.share-btn:disabled {
					opacity: 0.7;
					cursor: not-allowed;
					transform: none;
				}

				/* üìê –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä 1920x2560 */
				.profile-share-capture {
					position: absolute;
					top: -9999px;
					left: -9999px;
					width: 1024px;
					height: 1868px;
					z-index: -1;
					transform: scale(0.1);
					transform-origin: top left;
				}

				.profile-share-capture.generating {
					position: fixed;
					top: 0;
					left: 0;
					z-index: 9999;
					transform: scale(1);
				}

				.share-wrapper {
					width: 100%;
					height: 100%;
					background: linear-gradient(45deg, #022722, #145e53);
					padding: 50px;
					box-sizing: border-box;
					display: flex;
					flex-direction: column;
					gap: 40px;
				}

				/* üéØ –•–µ–¥–µ—Ä –ø—Ä–æ—Ñ—ñ–ª—é */
				.share-header-section {
					flex-shrink: 0;
				}

				.share-header-section .profile-header {
					padding: 30px 0;
				}

				.share-header-section .profile-header__content {
					gap: 50px;
					justify-content: flex-start;
				}

				.share-header-section .profile-avatar .avatar-ring {
					width: 200px;
					height: 200px;
					padding: 6px;
				}

				.share-header-section .avatar-status {
					width: 30px;
					height: 30px;
					border-width: 4px;
					bottom: 10px;
					right: 15px;
				}

				.share-header-section .profile-name {
					font-size: 4rem;
					margin-bottom: 1.5rem;
					background: none !important;
					-webkit-background-clip: unset !important;
					-webkit-text-fill-color: unset !important;
					background-clip: unset !important;
					color: #ffffff !important;
				}

				.share-header-section .role-badge {
					padding: 0.8rem 1.6rem;
					font-size: 1.4rem;
					border-radius: 30px;
				}

				.share-header-section .meta-item {
					font-size: 1.6rem;
					gap: 0.8rem;
				}

				.share-header-section .meta-icon {
					font-size: 1.4rem;
				}

				/* üìä –ë–ª–æ–∫ 1: –ë–∞–ª–∞–Ω—Å + –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */
				.share-content-row {
					display: grid;
					grid-template-columns: 1fr 1fr;
					gap: 40px;
					flex-shrink: 0;
				}

				.share-balance-column,
				.share-stats-column {
					display: flex;
					flex-direction: column;
				}

				/* üéÆ –ë–ª–æ–∫ 2: –Ü–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */
				.share-game-stats-row {
					flex-shrink: 0;
				}

				/* üìã –ö–∞—Ä—Ç–æ—á–∫–∏ - –∑–±—ñ–ª—å—à–µ–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ */
				.share-wrapper :global(.profile-card) {
					padding: 35px;
					font-size: 1.5em;
					border-radius: 20px;
					border-width: 2px;
				}

				.share-wrapper :global(.card-title) {
					font-size: 2.2rem;
					gap: 0.8rem;
					margin-bottom: 2rem;
				}

				.share-wrapper :global(.card-icon) {
					font-size: 2rem;
				}

				/* üí∞ –ë–∞–ª–∞–Ω—Å */
				.share-wrapper :global(.balance-content) {
					gap: 1.5rem;
				}

				.share-wrapper :global(.balance-item) {
					padding: 1.8rem;
					border-radius: 15px;
					border-left-width: 6px;
				}

				.share-wrapper :global(.balance-label) {
					font-size: 1.3rem;
				}

				.share-wrapper :global(.balance-value) {
					font-size: 2.8rem;
				}

				.share-wrapper :global(.balance-icon) {
					height: 50px;
				}

				.share-wrapper :global(.balance-icon img) {
					width: 50px;
					height: 50px;
				}

				/* üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */
				.share-wrapper :global(.stats-grid) {
					gap: 1.5rem;
					margin-bottom: 1.5rem;
				}

				.share-wrapper :global(.stat-item) {
					gap: 1.2rem;
					padding: 1.8rem;
					border-radius: 15px;
					border-width: 2px;
					border-left-width: 4px;
				}

				.share-wrapper :global(.stat-icon) {
					font-size: 2.2rem;
				}

				.share-wrapper :global(.stat-value) {
					font-size: 2rem;
				}

				.share-wrapper :global(.stat-label) {
					font-size: 1.4rem;
				}

				/* üéØ –Ü–≥—Ä–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */
				.share-wrapper :global(.activity-header) {
					margin-bottom: 0.8rem;
				}

				.share-wrapper :global(.activity-badge) {
					padding: 0.8rem 1.6rem;
					border-radius: 25px;
					font-size: 1.2rem;
				}

				.share-wrapper :global(.progress-bar) {
					height: 12px;
					border-radius: 6px;
				}

				.share-wrapper :global(.progress-percentage) {
					font-size: 1.4rem;
					min-width: 60px;
				}

				.share-wrapper :global(.kd-ratio),
				.share-wrapper :global(.session-average) {
					padding: 1.8rem;
					border-radius: 15px;
					border-width: 2px;
					margin-bottom: 1.5rem;
				}

				.share-wrapper :global(.ratio-header),
				.share-wrapper :global(.session-header) {
					gap: 0.8rem;
					margin-bottom: 0.8rem;
				}

				.share-wrapper :global(.ratio-icon),
				.share-wrapper :global(.session-icon) {
					font-size: 1.8rem;
				}

				.share-wrapper :global(.ratio-label),
				.share-wrapper :global(.session-label) {
					font-size: 1.4rem;
				}

				.share-wrapper :global(.ratio-number),
				.share-wrapper :global(.session-value) {
					font-size: 2rem;
				}

				.share-wrapper :global(.ratio-breakdown) {
					font-size: 1.4rem;
				}

				/* üè∑Ô∏è –ó–Ω–∏–∂–∫–∞ */
				.share-wrapper :global(.discount-section) {
					padding: 1.8rem;
					border-radius: 15px;
					border-width: 2px;
				}

				.share-wrapper :global(.discount-progress) {
					gap: 1.2rem;
				}

				.share-wrapper :global(.current-discount) {
					font-size: 1.8rem;
				}

				.share-wrapper :global(.max-discount) {
					font-size: 1.4rem;
				}

				/* üèÜ –§—É—Ç–µ—Ä */
				.share-footer {
					border-top: 3px solid rgba(74, 237, 217, 0.3);
					padding-top: 30px;
					margin-top: auto;
					flex-shrink: 0;
				}

				.footer-content {
					display: flex;
					justify-content: space-between;
					align-items: center;
				}

				.server-info {
					display: flex;
					flex-direction: column;
					gap: 8px;
				}

				.server-name {
					font-size: 2.6rem;
					font-weight: 700;
					color: #4aedd9;
				}

				.server-ip {
					font-size: 2rem;
					color: rgba(255, 255, 255, 0.8);
				}

				.footer-text {
					font-size: 1.8rem;
					font-weight: 600;
					color: #FBFF00;
				}

				@media (max-width: 768px) {
					.share-controls {
						flex-direction: column;
						gap: 8px;
					}
					
					.share-btn {
						width: 100%;
						justify-content: center;
					}
				}
			`}</style>
		</div>
	);
};

export default ProfileShareGenerator;